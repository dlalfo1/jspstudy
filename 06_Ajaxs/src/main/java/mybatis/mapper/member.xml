<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mybatis.mapper.member">

	<!-- SELECT문에는 쿼리문의 실행결과를 반환하는 resultType이 필요하다. -->
	<!-- DAO에서 쿼리문으로 전달하는 데이터를 받을 parameterType도 필요하다. -->
	<!-- 목록 -->
	<select id="selectAllMembers" resultType="Member"> <!-- SELECT문의 실행하면 List를 반환하지만 resultType에 List를 넣지 않는다. -->
													   <!-- List여도 Member 1개를 반환타입으로 적는다. -->
													   <!-- 여기서 Member는 config 환경설정에서 domain.Member에 붙여준 별명이다. -->
													   <!-- domain의 Member보단 별명이라 부르는게 정확한 표현이다. -->
		SELECT MEMBER_NO, ID, NAME, GENDER, ADDRESS
		  FROM MEMBER
		 ORDER BY MEMBER_NO DESC
	</select>

	<!-- 전체 회원 수 -->
	<select id="getMemberCount" resultType="int">
		SELECT COUNT(*)
		  FROM MEMBER
	</select>
	
	<!-- 상세 -->
	<select id="selectMemberByNo" parameterType="int" resultType="Member"> <!-- DAO에서 전달받은 memberNo의 타입을 적어준다.  -->
		SELECT MEMBER_NO, ID, NAME, GENDER, ADDRESS
		  FROM MEMBER
		 WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 삽입 -->
	<insert id="insertMember" parameterType="Member">
		INSERT INTO MEMBER
			(MEMBER_NO, ID, NAME, GENDER, ADDRESS)
		VALUES
			(MEMBER_SEQ.NEXTVAL, #{id}, #{name}, #{gender}, #{address})
	</insert>
	
	<!-- 수정 -->
	<update id="updateMember" parameterType="Member">
		UPDATE MEMBER
		   SET NAME = #{name}
		     , GENDER = #{gender}
		     , ADDRESS = #{address}
		 WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 삭제 -->
	<delete id="deleteMember" parameterType="int">
		DELETE
		  FROM MEMBER
		 WHERE MEMBER_NO = #{memberNo}
	</delete>

</mapper>